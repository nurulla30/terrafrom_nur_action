name: 'Terraform CI/CD Pipeline'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select which environment(s) to run'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - qa
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Set environment secrets dynamically
    env:
      AZURE_CLIENT_ID: ${{ secrets["AZURE_CLIENT_ID_" + github.event.inputs.environment | upper] }}
      AZURE_CLIENT_SECRET: ${{ secrets["AZURE_CLIENT_SECRET_" + github.event.inputs.environment | upper] }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets["AZURE_SUBSCRIPTION_ID_" + github.event.inputs.environment | upper] }}
      AZURE_TENANT_ID: ${{ secrets["AZURE_TENANT_ID_" + github.event.inputs.environment | upper] }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Azure Login for ${{ github.event.inputs.environment | upper }}
      uses: azure/login@v1
      with:
        client-id: ${{ secrets["AZURE_CLIENT_ID_" + github.event.inputs.environment | upper] }}
        tenant-id: ${{ secrets["AZURE_TENANT_ID_" + github.event.inputs.environment | upper] }}
        subscription-id: ${{ secrets["AZURE_SUBSCRIPTION_ID_" + github.event.inputs.environment | upper] }}

    - name: Terraform Init for ${{ github.event.inputs.environment | upper }}
      run: |
        terraform init \
          -backend-config="storage_account_name=${{ secrets['AZURE_STORAGE_ACCOUNT_' + github.event.inputs.environment | upper] }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=${{ github.event.inputs.environment }}.tfstate" \
          -backend-config="subscription_id=${{ secrets['AZURE_SUBSCRIPTION_ID_' + github.event.inputs.environment | upper] }}" \
          -backend-config="tenant_id=${{ secrets['AZURE_TENANT_ID_' + github.event.inputs.environment | upper] }}"

    - name: Terraform Plan for ${{ github.event.inputs.environment | upper }}
      run: terraform plan -out=tfplan -var-file="tf/${{ github.event.inputs.environment }}.tfvars"

    - name: Terraform Apply for ${{ github.event.inputs.environment | upper }}
      if: github.event_name == 'workflow_dispatch'
      run: terraform apply -auto-approve tfplan
