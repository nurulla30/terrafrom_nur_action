name: 'Terraform CI/CD Pipeline'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select which environment(s) to run'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - qa
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Environment secrets setup
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        terraform_version: 1.6.6

    - name: Azure Login for ${{ github.event.inputs.environment | upper }}
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Terraform Init for ${{ github.event.inputs.environment | upper }}
      run: terraform init -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT }}" \
                          -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
                          -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP }}" \
                          -backend-config="key=${{ github.event.inputs.environment }}.tfstate"

    - name: Terraform Plan for ${{ github.event.inputs.environment | upper }}
      run: terraform plan -var-file="tf/${{ github.event.inputs.environment }}.tfvars"

    - name: Terraform Apply for ${{ github.event.inputs.environment | upper }}
      if: github.event_name == 'workflow_dispatch'
      run: terraform apply -auto-approve
